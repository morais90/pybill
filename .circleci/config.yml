workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
        environment:
          DATABASE_URL: postgresql://olist@localhost/olist

      - image: circleci/postgres:alpine
        environment:
          POSTGRES_USER: olist
          POSTGRES_DB: olist

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: sudo apt-get update && sudo apt-get install -y libpq-dev

      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/development.txt" }}

      - run:
          name: Install requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip && pip install --requirement requirements/development.txt

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/development.txt" }}
          paths:
            - "venv"

      - run:
          name: Linter
          command: |
            . venv/bin/activate
            pycodestyle olist/

      - run:
          name: Unit tests
          command: |
            . venv/bin/activate
            python manage.py test --verbosity 2 --noinput  tests

  deploy:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
